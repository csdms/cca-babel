#! /bin/bash
## File:        runJava2F03.in
## Package:     Babel regression tests
## Revision:    $Revision$
## Modified:    $Date$
## Description: script to run Java calling F03 regression test
## Generated automatically by babel/regression/genrunjava.py
#
## Copyright (c) 2000-2004, Lawrence Livermore National Security, LLC
## Produced at the Lawrence Livermore National Laboratory.
## Written by the Components Team <components@llnl.gov>
## UCRL-CODE-2002-054
## All rights reserved.
##
## This file is part of Babel. For more information, see
## http://www.llnl.gov/CASC/components/. Please read the COPYRIGHT file
## for Our Notice and the LICENSE file for the GNU Lesser General Public
## License.
##
## This program is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License (as published by
## the Free Software Foundation) version 2.1 dated February 1999.
##
## This program is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the IMPLIED WARRANTY OF
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the terms and
## conditions of the GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this program; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# limit CPU time to 5 minutes
ulimit -t 300
prefix="@prefix@"
exec_prefix="@exec_prefix@"
bindir="@bindir@"
libdir="@libdir@"
JAVA="@JAVA@"
VERSION="@VERSION@"

case "`uname`" in
  CYGWIN*) cygwin=true;;
  *) cygwin=false;;
esac

if test -f stamp-installcheck; then
  CLASSPATH="${libdir}/sidl-${VERSION}.jar:${libdir}/sidlstub_${VERSION}.jar:."
  SIDL_DLL_PATH="libClient.scl;../libF03/libImpl.scl;${libdir}/libsidl.scl;${libdir}/libsidlx.scl;../../output/libC/libOutput.scl;${libdir}/libsidlstub_java.scl"
  if $cygwin; then
    JAVA_LIBRARY_PATH="${bindir}"
  else
    JAVA_LIBRARY_PATH="${libdir}"
  fi
  @SHARED_LIB_VAR@="${libdir}:${@SHARED_LIB_VAR@}"
else
  CLASSPATH=../../../lib/sidl-${VERSION}.jar:../../../lib/sidlstubs/Java/sidlstub_${VERSION}.jar:.
  SIDL_DLL_PATH="libClient.scl;../libF03/libImpl.scl;../../../runtime/sidl/libsidl.scl;../../../runtime/sidlx/libsidlx.scl;../../output/libC/libOutput.scl;../../../lib/sidlstubs/Java/libsidlstub_java.scl"
  JAVA_LIBRARY_PATH=../../../runtime/sidl/.libs
  @SHARED_LIB_VAR@="../../../runtime/sidl/.libs:../../../runtime/libchasmlite/.libs:../../../runtime/libparsifal/src/.libs:../../../runtime/sidlx/.libs:../../../lib/sidlstubs/F03/.libs:${@SHARED_LIB_VAR@}"
fi
export @SHARED_LIB_VAR@
SIDL_LIBRARY_NAME=sidl

if $cygwin; then
  CLASSPATH=`cygpath --path --windows "${CLASSPATH}"`
  JAVA_LIBRARY_PATH=`cygpath --path --windows "${JAVA_LIBRARY_PATH}"`
  SIDL_LIBRARY_NAME=cygsidl-`echo ${VERSION} | tr . -`
fi
export SIDL_DLL_PATH;
export CLASSPATH

${JAVA} \
  -Djava.library.path="${JAVA_LIBRARY_PATH}" \
  -Dsidl.library.name="${SIDL_LIBRARY_NAME}" \
  InheritTest $* &
javapid=$!
trap "echo 'Test timed out' ; kill -9 $javapid" 14
(sleep 90 && kill -s 14 $$ ) <&- >&- 2>&- &
timerpid=$!
wait $javapid
result=$?
kill $timerpid
exit $result

